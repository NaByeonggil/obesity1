"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/clinics/route";
exports.ids = ["app/api/clinics/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _home_nbg_Desktop_obesity1_src_app_api_clinics_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/app/api/clinics/route.ts */ \"(rsc)/./src/app/api/clinics/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/clinics/route\",\n        pathname: \"/api/clinics\",\n        filename: \"route\",\n        bundlePath: \"app/api/clinics/route\"\n    },\n    resolvedPagePath: \"/home/nbg/Desktop/obesity1/src/app/api/clinics/route.ts\",\n    nextConfigOutput,\n    userland: _home_nbg_Desktop_obesity1_src_app_api_clinics_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/clinics/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbGluaWNzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjbGluaWNzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2xpbmljcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbmJnJTJGRGVza3RvcCUyRm9iZXNpdHkxJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGbmJnJTJGRGVza3RvcCUyRm9iZXNpdHkxJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNxQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWRpY2FsLXBsYXRmb3JtLz9jODAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9ob21lL25iZy9EZXNrdG9wL29iZXNpdHkxL3NyYy9hcHAvYXBpL2NsaW5pY3Mvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NsaW5pY3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jbGluaWNzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jbGluaWNzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL2hvbWUvbmJnL0Rlc2t0b3Avb2Jlc2l0eTEvc3JjL2FwcC9hcGkvY2xpbmljcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jbGluaWNzL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/clinics/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/clinics/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\n// 진료비 조회 함수\nfunction getConsultationFee(doctor, department) {\n    const departmentNames = {\n        \"obesity-treatment\": \"마운자로\",\n        \"obesity\": \"비만\",\n        \"eye-care\": \"안과\",\n        \"cold\": \"감기\",\n        \"internal-medicine\": \"내과\",\n        \"pediatrics\": \"소아과\",\n        \"dermatology\": \"피부과\",\n        \"orthopedics\": \"정형외과\",\n        \"neurosurgery\": \"신경외과\",\n        \"ent\": \"이비인후과\",\n        \"obgyn\": \"산부인과\",\n        \"urology\": \"비뇨기과\",\n        \"gastroenterology\": \"소화기내과\",\n        \"proctology\": \"항문외과\",\n        \"bowel-disorder\": \"대변\"\n    };\n    const targetDepartmentName = department ? departmentNames[department] : null;\n    // 비만 관련 과목들은 모두 대면 진료로 처리\n    const obesityDepartments = [\n        \"obesity-treatment\",\n        \"obesity\"\n    ];\n    const offlineDepartments = [\n        \"obesity-treatment\",\n        \"obesity\",\n        \"orthopedics\",\n        \"neurosurgery\",\n        \"dermatology\"\n    ];\n    const isOffline = department ? offlineDepartments.includes(department) : false;\n    const consultationType = isOffline ? \"OFFLINE\" : \"ONLINE\";\n    // 해당 의사의 진료비 찾기\n    if (doctor.clinic_fees && doctor.clinic_fees.length > 0) {\n        let matchingFee;\n        // 비만 관련 과목일 때는 유연한 매칭\n        if (department && obesityDepartments.includes(department)) {\n            matchingFee = doctor.clinic_fees.find((fee)=>fee.consultationType === consultationType && fee.isActive && (fee.departments.name.includes(\"비만\") || fee.departments.name.includes(\"마운자로\") || fee.departments.name.includes(\"체중\") || fee.departments.name.includes(\"다이어트\")));\n        } else {\n            // 다른 과목들은 정확한 매칭\n            matchingFee = doctor.clinic_fees.find((fee)=>(!targetDepartmentName || fee.departments.name.includes(targetDepartmentName)) && fee.consultationType === consultationType && fee.isActive);\n        }\n        if (matchingFee) {\n            return {\n                fee: matchingFee.basePrice,\n                isOffline\n            };\n        }\n        // 정확한 매칭이 없으면 같은 consultationType의 첫 번째 활성 진료비 사용\n        const fallbackFee = doctor.clinic_fees.find((fee)=>fee.consultationType === consultationType && fee.isActive);\n        if (fallbackFee) {\n            return {\n                fee: fallbackFee.basePrice,\n                isOffline\n            };\n        }\n    }\n    // 기본 진료비 (DB에 데이터가 없는 경우)\n    const baseFees = {\n        \"소화기내과\": 25000,\n        \"항문외과\": 30000,\n        \"내과\": 20000,\n        \"외과\": 35000,\n        \"비만치료 전문의\": 40000,\n        \"내분비내과 전문의\": 35000,\n        \"피부과 전문의\": 30000,\n        \"정형외과 전문의\": 35000,\n        \"이비인후과 전문의\": 25000,\n        \"마운자로\": 80000\n    };\n    const baseFee = baseFees[doctor.specialization || \"\"] || 20000;\n    const finalFee = isOffline ? Math.floor(baseFee * 1.2) : baseFee;\n    return {\n        fee: finalFee,\n        isOffline\n    };\n}\nasync function GET(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const department = searchParams.get(\"department\");\n        const district = searchParams.get(\"district\");\n        const userLat = searchParams.get(\"lat\");\n        const userLng = searchParams.get(\"lng\");\n        const sortBy = searchParams.get(\"sortBy\") || \"auto\" // auto, distance, price\n        ;\n        // 의사 정보와 함께 클리닉 정보 조회\n        let whereClause = {\n            role: \"DOCTOR\"\n        };\n        // 진료과목별 필터링\n        if (department && department !== \"all\") {\n            const departmentNames = {\n                \"obesity-treatment\": \"마운자로\",\n                \"obesity\": \"비만\",\n                \"eye-care\": \"안과\",\n                \"cold\": \"감기\",\n                \"internal-medicine\": \"내과\",\n                \"pediatrics\": \"소아과\",\n                \"dermatology\": \"피부과\",\n                \"orthopedics\": \"정형외과\",\n                \"neurosurgery\": \"신경외과\",\n                \"ent\": \"이비인후과\",\n                \"obgyn\": \"산부인과\",\n                \"urology\": \"비뇨기과\",\n                \"gastroenterology\": \"소화기내과\",\n                \"proctology\": \"항문외과\",\n                \"bowel-disorder\": \"대변\"\n            };\n            // 비만 관련 과목들은 모두 함께 보여주기\n            const obesityDepartments = [\n                \"obesity-treatment\",\n                \"obesity\"\n            ];\n            if (obesityDepartments.includes(department)) {\n                // 비만 관련 과목 선택 시 '비만' 또는 '마운자로' 포함된 의원들 모두 표시\n                whereClause.OR = [\n                    {\n                        specialization: {\n                            contains: \"비만\"\n                        }\n                    },\n                    {\n                        specialization: {\n                            contains: \"마운자로\"\n                        }\n                    },\n                    {\n                        specialization: {\n                            contains: \"체중\"\n                        }\n                    },\n                    {\n                        specialization: {\n                            contains: \"다이어트\"\n                        }\n                    }\n                ];\n            } else {\n                const departmentName = departmentNames[department];\n                if (departmentName) {\n                    whereClause.specialization = {\n                        contains: departmentName\n                    };\n                }\n            }\n        }\n        const doctors = await prisma.users.findMany({\n            where: whereClause,\n            select: {\n                id: true,\n                name: true,\n                specialization: true,\n                clinic: true,\n                address: true,\n                phone: true,\n                avatar: true,\n                clinic_fees: {\n                    include: {\n                        departments: true\n                    }\n                }\n            }\n        });\n        // 의사 정보를 클리닉 형태로 변환\n        const clinics = doctors.map((doctor, index)=>{\n            // 주소 기반 좌표 매핑 (더 정확한 위치)\n            const addressCoords = {\n                \"강남\": {\n                    lat: 37.5172,\n                    lng: 127.0473\n                },\n                \"서초\": {\n                    lat: 37.4837,\n                    lng: 127.0324\n                },\n                \"송파\": {\n                    lat: 37.5145,\n                    lng: 127.1059\n                },\n                \"영등포\": {\n                    lat: 37.5263,\n                    lng: 126.8968\n                },\n                \"중구\": {\n                    lat: 37.5640,\n                    lng: 126.9805\n                },\n                \"역삼\": {\n                    lat: 37.5007,\n                    lng: 127.0366\n                },\n                \"신사\": {\n                    lat: 37.5203,\n                    lng: 127.0230\n                },\n                \"청담\": {\n                    lat: 37.5223,\n                    lng: 127.0463\n                }\n            };\n            // 주소에서 지역 추출하여 좌표 결정\n            let clinicCoord = {\n                lat: 37.5665,\n                lng: 126.9780\n            } // 기본값: 서울역\n            ;\n            if (doctor.address) {\n                for (const [area, coord] of Object.entries(addressCoords)){\n                    if (doctor.address.includes(area)) {\n                        clinicCoord = coord;\n                        break;\n                    }\n                }\n            }\n            // 같은 지역 내에서 약간의 랜덤 오프셋 (더 자연스러운 분포)\n            const randomOffset = ()=>(Math.random() - 0.5) * 0.005;\n            clinicCoord = {\n                lat: clinicCoord.lat + randomOffset(),\n                lng: clinicCoord.lng + randomOffset()\n            };\n            let distance = null;\n            // 사용자 위치가 있으면 실제 거리 계산, 없으면 기본 위치(서울역)에서 계산\n            const defaultLat = userLat ? parseFloat(userLat) : 37.5665;\n            const defaultLng = userLng ? parseFloat(userLng) : 126.9780;\n            const R = 6371 // 지구 반지름 (km)\n            ;\n            const dLat = (clinicCoord.lat - defaultLat) * Math.PI / 180;\n            const dLon = (clinicCoord.lng - defaultLng) * Math.PI / 180;\n            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(defaultLat * Math.PI / 180) * Math.cos(clinicCoord.lat * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            distance = R * c // 거리 (km)\n            ;\n            // 지역별 필터링\n            const clinicDistrict = doctor.address?.includes(\"강남\") ? \"강남구\" : doctor.address?.includes(\"서초\") ? \"서초구\" : doctor.address?.includes(\"송파\") ? \"송파구\" : doctor.address?.includes(\"영등포\") ? \"영등포구\" : \"중구\";\n            if (district && district !== \"all\" && district !== clinicDistrict) {\n                return null;\n            }\n            return {\n                id: doctor.id,\n                name: doctor.clinic || `${doctor.name} 클리닉`,\n                doctorName: doctor.name,\n                doctorImage: doctor.avatar,\n                address: doctor.address || `서울시 ${clinicDistrict} 가상주소 ${index + 1}번지`,\n                phone: doctor.phone || `02-${1000 + index}-${2000 + index}`,\n                specialization: doctor.specialization || \"일반의\",\n                distance: `${distance.toFixed(1)}km`,\n                district: clinicDistrict,\n                coordinates: clinicCoord,\n                hours: {\n                    mon_fri: \"09:00 - 18:00\",\n                    sat: \"09:00 - 13:00\",\n                    sun: \"휴진\"\n                },\n                consultationType: getConsultationFee(doctor, department).isOffline ? \"offline\" : \"online\",\n                consultationFee: getConsultationFee(doctor, department).fee\n            };\n        }).filter(Boolean);\n        // 정렬 로직\n        if (sortBy === \"price\") {\n            // 진료비 싼 순으로 정렬\n            clinics.sort((a, b)=>a.consultationFee - b.consultationFee);\n        } else if (sortBy === \"distance\") {\n            // 거리 가까운 순으로 정렬\n            clinics.sort((a, b)=>{\n                const distA = parseFloat(a.distance.replace(\"km\", \"\"));\n                const distB = parseFloat(b.distance.replace(\"km\", \"\"));\n                return distA - distB;\n            });\n        } else {\n            // 자동 정렬 (기존 로직): 진료 타입에 따른 정렬\n            const isOnlineConsultation = clinics.length > 0 && clinics[0].consultationType === \"online\";\n            if (isOnlineConsultation) {\n                // 비대면 진료: 진료비 싼 순으로 정렬\n                clinics.sort((a, b)=>a.consultationFee - b.consultationFee);\n            } else {\n                // 대면 진료: 거리 가까운 순으로 정렬\n                clinics.sort((a, b)=>{\n                    const distA = parseFloat(a.distance.replace(\"km\", \"\"));\n                    const distB = parseFloat(b.distance.replace(\"km\", \"\"));\n                    return distA - distB;\n                });\n            }\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            clinics: clinics\n        });\n    } catch (error) {\n        console.error(\"Clinics API error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"클리닉 정보를 가져오는 중 오류가 발생했습니다.\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2s6Ly9tZWRpY2FsLXBsYXRmb3JtLy4vc3JjL2FwcC9hcGkvY2xpbmljcy9yb3V0ZS50cz81N2ViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxuaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCJcblxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpXG5cbi8vIOynhOujjOu5hCDsobDtmowg7ZWo7IiYXG5mdW5jdGlvbiBnZXRDb25zdWx0YXRpb25GZWUoZG9jdG9yOiBhbnksIGRlcGFydG1lbnQ6IHN0cmluZyB8IG51bGwpOiB7IGZlZTogbnVtYmVyLCBpc09mZmxpbmU6IGJvb2xlYW4gfSB7XG4gIGNvbnN0IGRlcGFydG1lbnROYW1lczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHtcbiAgICBcIm9iZXNpdHktdHJlYXRtZW50XCI6IFwi66eI7Jq07J6Q66GcXCIsXG4gICAgXCJvYmVzaXR5XCI6IFwi67mE66eMXCIsXG4gICAgXCJleWUtY2FyZVwiOiBcIuyViOqzvFwiLFxuICAgIFwiY29sZFwiOiBcIuqwkOq4sFwiLFxuICAgIFwiaW50ZXJuYWwtbWVkaWNpbmVcIjogXCLrgrTqs7xcIixcbiAgICBcInBlZGlhdHJpY3NcIjogXCLshozslYTqs7xcIixcbiAgICBcImRlcm1hdG9sb2d5XCI6IFwi7ZS867aA6rO8XCIsXG4gICAgXCJvcnRob3BlZGljc1wiOiBcIuygle2YleyZuOqzvFwiLFxuICAgIFwibmV1cm9zdXJnZXJ5XCI6IFwi7Iug6rK97Jm46rO8XCIsXG4gICAgXCJlbnRcIjogXCLsnbTruYTsnbjtm4Tqs7xcIixcbiAgICBcIm9iZ3luXCI6IFwi7IKw67aA7J246rO8XCIsXG4gICAgXCJ1cm9sb2d5XCI6IFwi67mE64eo6riw6rO8XCIsXG4gICAgXCJnYXN0cm9lbnRlcm9sb2d5XCI6IFwi7IaM7ZmU6riw64K06rO8XCIsXG4gICAgXCJwcm9jdG9sb2d5XCI6IFwi7ZWt66y47Jm46rO8XCIsXG4gICAgXCJib3dlbC1kaXNvcmRlclwiOiBcIuuMgOuzgFwiXG4gIH1cblxuICBjb25zdCB0YXJnZXREZXBhcnRtZW50TmFtZSA9IGRlcGFydG1lbnQgPyBkZXBhcnRtZW50TmFtZXNbZGVwYXJ0bWVudF0gOiBudWxsXG5cbiAgLy8g67mE66eMIOq0gOugqCDqs7zrqqnrk6TsnYAg66qo65GQIOuMgOuptCDsp4Tro4zroZwg7LKY66asXG4gIGNvbnN0IG9iZXNpdHlEZXBhcnRtZW50cyA9IFsnb2Jlc2l0eS10cmVhdG1lbnQnLCAnb2Jlc2l0eSddXG4gIGNvbnN0IG9mZmxpbmVEZXBhcnRtZW50cyA9IFsnb2Jlc2l0eS10cmVhdG1lbnQnLCAnb2Jlc2l0eScsICdvcnRob3BlZGljcycsICduZXVyb3N1cmdlcnknLCAnZGVybWF0b2xvZ3knXVxuXG4gIGNvbnN0IGlzT2ZmbGluZSA9IGRlcGFydG1lbnQgPyBvZmZsaW5lRGVwYXJ0bWVudHMuaW5jbHVkZXMoZGVwYXJ0bWVudCkgOiBmYWxzZVxuICBjb25zdCBjb25zdWx0YXRpb25UeXBlID0gaXNPZmZsaW5lID8gJ09GRkxJTkUnIDogJ09OTElORSdcblxuICAvLyDtlbTri7kg7J2Y7IKs7J2YIOynhOujjOu5hCDssL7quLBcbiAgaWYgKGRvY3Rvci5jbGluaWNfZmVlcyAmJiBkb2N0b3IuY2xpbmljX2ZlZXMubGVuZ3RoID4gMCkge1xuICAgIGxldCBtYXRjaGluZ0ZlZTtcblxuICAgIC8vIOu5hOunjCDqtIDroKgg6rO866qp7J28IOuVjOuKlCDsnKDsl7DtlZwg66ek7LmtXG4gICAgaWYgKGRlcGFydG1lbnQgJiYgb2Jlc2l0eURlcGFydG1lbnRzLmluY2x1ZGVzKGRlcGFydG1lbnQpKSB7XG4gICAgICBtYXRjaGluZ0ZlZSA9IGRvY3Rvci5jbGluaWNfZmVlcy5maW5kKChmZWU6IGFueSkgPT5cbiAgICAgICAgZmVlLmNvbnN1bHRhdGlvblR5cGUgPT09IGNvbnN1bHRhdGlvblR5cGUgJiZcbiAgICAgICAgZmVlLmlzQWN0aXZlICYmXG4gICAgICAgIChmZWUuZGVwYXJ0bWVudHMubmFtZS5pbmNsdWRlcyhcIuu5hOunjFwiKSB8fFxuICAgICAgICAgZmVlLmRlcGFydG1lbnRzLm5hbWUuaW5jbHVkZXMoXCLrp4jsmrTsnpDroZxcIikgfHxcbiAgICAgICAgIGZlZS5kZXBhcnRtZW50cy5uYW1lLmluY2x1ZGVzKFwi7LK07KSRXCIpIHx8XG4gICAgICAgICBmZWUuZGVwYXJ0bWVudHMubmFtZS5pbmNsdWRlcyhcIuuLpOydtOyWtO2KuFwiKSlcbiAgICAgIClcbiAgICB9IGVsc2Uge1xuICAgICAgLy8g64uk66W4IOqzvOuqqeuTpOydgCDsoJXtmZXtlZwg66ek7LmtXG4gICAgICBtYXRjaGluZ0ZlZSA9IGRvY3Rvci5jbGluaWNfZmVlcy5maW5kKChmZWU6IGFueSkgPT5cbiAgICAgICAgKCF0YXJnZXREZXBhcnRtZW50TmFtZSB8fCBmZWUuZGVwYXJ0bWVudHMubmFtZS5pbmNsdWRlcyh0YXJnZXREZXBhcnRtZW50TmFtZSkpICYmXG4gICAgICAgIGZlZS5jb25zdWx0YXRpb25UeXBlID09PSBjb25zdWx0YXRpb25UeXBlICYmXG4gICAgICAgIGZlZS5pc0FjdGl2ZVxuICAgICAgKVxuICAgIH1cblxuICAgIGlmIChtYXRjaGluZ0ZlZSkge1xuICAgICAgcmV0dXJuIHsgZmVlOiBtYXRjaGluZ0ZlZS5iYXNlUHJpY2UsIGlzT2ZmbGluZSB9XG4gICAgfVxuXG4gICAgLy8g7KCV7ZmV7ZWcIOunpOy5reydtCDsl4bsnLzrqbQg6rCZ7J2AIGNvbnN1bHRhdGlvblR5cGXsnZgg7LKrIOuyiOynuCDtmZzshLEg7KeE66OM67mEIOyCrOyaqVxuICAgIGNvbnN0IGZhbGxiYWNrRmVlID0gZG9jdG9yLmNsaW5pY19mZWVzLmZpbmQoKGZlZTogYW55KSA9PlxuICAgICAgZmVlLmNvbnN1bHRhdGlvblR5cGUgPT09IGNvbnN1bHRhdGlvblR5cGUgJiYgZmVlLmlzQWN0aXZlXG4gICAgKVxuXG4gICAgaWYgKGZhbGxiYWNrRmVlKSB7XG4gICAgICByZXR1cm4geyBmZWU6IGZhbGxiYWNrRmVlLmJhc2VQcmljZSwgaXNPZmZsaW5lIH1cbiAgICB9XG4gIH1cblxuICAvLyDquLDrs7gg7KeE66OM67mEIChEQuyXkCDrjbDsnbTthLDqsIAg7JeG64qUIOqyveyasClcbiAgY29uc3QgYmFzZUZlZXM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7XG4gICAgJ+yGjO2ZlOq4sOuCtOqzvCc6IDI1MDAwLFxuICAgICftla3rrLjsmbjqs7wnOiAzMDAwMCxcbiAgICAn64K06rO8JzogMjAwMDAsXG4gICAgJ+yZuOqzvCc6IDM1MDAwLFxuICAgICfruYTrp4zsuZjro4wg7KCE66y47J2YJzogNDAwMDAsXG4gICAgJ+uCtOu2hOu5hOuCtOqzvCDsoITrrLjsnZgnOiAzNTAwMCxcbiAgICAn7ZS867aA6rO8IOyghOusuOydmCc6IDMwMDAwLFxuICAgICfsoJXtmJXsmbjqs7wg7KCE66y47J2YJzogMzUwMDAsXG4gICAgJ+ydtOu5hOyduO2bhOqzvCDsoITrrLjsnZgnOiAyNTAwMCxcbiAgICAn66eI7Jq07J6Q66GcJzogODAwMDBcbiAgfVxuXG4gIGNvbnN0IGJhc2VGZWUgPSBiYXNlRmVlc1tkb2N0b3Iuc3BlY2lhbGl6YXRpb24gfHwgJyddIHx8IDIwMDAwXG4gIGNvbnN0IGZpbmFsRmVlID0gaXNPZmZsaW5lID8gTWF0aC5mbG9vcihiYXNlRmVlICogMS4yKSA6IGJhc2VGZWVcblxuICByZXR1cm4geyBmZWU6IGZpbmFsRmVlLCBpc09mZmxpbmUgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXEudXJsKVxuICAgIGNvbnN0IGRlcGFydG1lbnQgPSBzZWFyY2hQYXJhbXMuZ2V0KCdkZXBhcnRtZW50JylcbiAgICBjb25zdCBkaXN0cmljdCA9IHNlYXJjaFBhcmFtcy5nZXQoJ2Rpc3RyaWN0JylcbiAgICBjb25zdCB1c2VyTGF0ID0gc2VhcmNoUGFyYW1zLmdldCgnbGF0JylcbiAgICBjb25zdCB1c2VyTG5nID0gc2VhcmNoUGFyYW1zLmdldCgnbG5nJylcbiAgICBjb25zdCBzb3J0QnkgPSBzZWFyY2hQYXJhbXMuZ2V0KCdzb3J0QnknKSB8fCAnYXV0bycgLy8gYXV0bywgZGlzdGFuY2UsIHByaWNlXG5cbiAgICAvLyDsnZjsgqwg7KCV67O07JmAIO2VqOq7mCDtgbTrpqzri4kg7KCV67O0IOyhsO2ajFxuICAgIGxldCB3aGVyZUNsYXVzZTogYW55ID0ge1xuICAgICAgcm9sZTogJ0RPQ1RPUidcbiAgICB9XG5cbiAgICAvLyDsp4Tro4zqs7zrqqnrs4Qg7ZWE7YSw66eBXG4gICAgaWYgKGRlcGFydG1lbnQgJiYgZGVwYXJ0bWVudCAhPT0gJ2FsbCcpIHtcbiAgICAgIGNvbnN0IGRlcGFydG1lbnROYW1lczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHtcbiAgICAgICAgXCJvYmVzaXR5LXRyZWF0bWVudFwiOiBcIuuniOyatOyekOuhnFwiLFxuICAgICAgICBcIm9iZXNpdHlcIjogXCLruYTrp4xcIixcbiAgICAgICAgXCJleWUtY2FyZVwiOiBcIuyViOqzvFwiLFxuICAgICAgICBcImNvbGRcIjogXCLqsJDquLBcIixcbiAgICAgICAgXCJpbnRlcm5hbC1tZWRpY2luZVwiOiBcIuuCtOqzvFwiLFxuICAgICAgICBcInBlZGlhdHJpY3NcIjogXCLshozslYTqs7xcIixcbiAgICAgICAgXCJkZXJtYXRvbG9neVwiOiBcIu2UvOu2gOqzvFwiLFxuICAgICAgICBcIm9ydGhvcGVkaWNzXCI6IFwi7KCV7ZiV7Jm46rO8XCIsXG4gICAgICAgIFwibmV1cm9zdXJnZXJ5XCI6IFwi7Iug6rK97Jm46rO8XCIsXG4gICAgICAgIFwiZW50XCI6IFwi7J2067mE7J247ZuE6rO8XCIsXG4gICAgICAgIFwib2JneW5cIjogXCLsgrDrtoDsnbjqs7xcIixcbiAgICAgICAgXCJ1cm9sb2d5XCI6IFwi67mE64eo6riw6rO8XCIsXG4gICAgICAgIFwiZ2FzdHJvZW50ZXJvbG9neVwiOiBcIuyGjO2ZlOq4sOuCtOqzvFwiLFxuICAgICAgICBcInByb2N0b2xvZ3lcIjogXCLtla3rrLjsmbjqs7xcIixcbiAgICAgICAgXCJib3dlbC1kaXNvcmRlclwiOiBcIuuMgOuzgFwiXG4gICAgICB9XG5cbiAgICAgIC8vIOu5hOunjCDqtIDroKgg6rO866qp65Ok7J2AIOuqqOuRkCDtlajqu5gg67O07Jes7KO86riwXG4gICAgICBjb25zdCBvYmVzaXR5RGVwYXJ0bWVudHMgPSBbJ29iZXNpdHktdHJlYXRtZW50JywgJ29iZXNpdHknXVxuXG4gICAgICBpZiAob2Jlc2l0eURlcGFydG1lbnRzLmluY2x1ZGVzKGRlcGFydG1lbnQpKSB7XG4gICAgICAgIC8vIOu5hOunjCDqtIDroKgg6rO866qpIOyEoO2DnSDsi5wgJ+u5hOunjCcg65iQ64qUICfrp4jsmrTsnpDroZwnIO2PrO2VqOuQnCDsnZjsm5Drk6Qg66qo65GQIO2RnOyLnFxuICAgICAgICB3aGVyZUNsYXVzZS5PUiA9IFtcbiAgICAgICAgICB7IHNwZWNpYWxpemF0aW9uOiB7IGNvbnRhaW5zOiBcIuu5hOunjFwiIH0gfSxcbiAgICAgICAgICB7IHNwZWNpYWxpemF0aW9uOiB7IGNvbnRhaW5zOiBcIuuniOyatOyekOuhnFwiIH0gfSxcbiAgICAgICAgICB7IHNwZWNpYWxpemF0aW9uOiB7IGNvbnRhaW5zOiBcIuyytOykkVwiIH0gfSxcbiAgICAgICAgICB7IHNwZWNpYWxpemF0aW9uOiB7IGNvbnRhaW5zOiBcIuuLpOydtOyWtO2KuFwiIH0gfVxuICAgICAgICBdXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBkZXBhcnRtZW50TmFtZSA9IGRlcGFydG1lbnROYW1lc1tkZXBhcnRtZW50XVxuICAgICAgICBpZiAoZGVwYXJ0bWVudE5hbWUpIHtcbiAgICAgICAgICB3aGVyZUNsYXVzZS5zcGVjaWFsaXphdGlvbiA9IHtcbiAgICAgICAgICAgIGNvbnRhaW5zOiBkZXBhcnRtZW50TmFtZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRvY3RvcnMgPSBhd2FpdCBwcmlzbWEudXNlcnMuZmluZE1hbnkoe1xuICAgICAgd2hlcmU6IHdoZXJlQ2xhdXNlLFxuICAgICAgc2VsZWN0OiB7XG4gICAgICAgIGlkOiB0cnVlLFxuICAgICAgICBuYW1lOiB0cnVlLFxuICAgICAgICBzcGVjaWFsaXphdGlvbjogdHJ1ZSxcbiAgICAgICAgY2xpbmljOiB0cnVlLFxuICAgICAgICBhZGRyZXNzOiB0cnVlLFxuICAgICAgICBwaG9uZTogdHJ1ZSxcbiAgICAgICAgYXZhdGFyOiB0cnVlLFxuICAgICAgICBjbGluaWNfZmVlczoge1xuICAgICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICAgIGRlcGFydG1lbnRzOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcblxuICAgIC8vIOydmOyCrCDsoJXrs7Trpbwg7YG066as64uJIO2Yle2DnOuhnCDrs4DtmZhcbiAgICBjb25zdCBjbGluaWNzID0gZG9jdG9ycy5tYXAoKGRvY3RvciwgaW5kZXgpID0+IHtcbiAgICAgIC8vIOyjvOyGjCDquLDrsJgg7KKM7ZGcIOunpO2VkSAo642UIOygle2Zle2VnCDsnITsuZgpXG4gICAgICBjb25zdCBhZGRyZXNzQ29vcmRzOiB7IFtrZXk6IHN0cmluZ106IHsgbGF0OiBudW1iZXIsIGxuZzogbnVtYmVyIH0gfSA9IHtcbiAgICAgICAgJ+qwleuCqCc6IHsgbGF0OiAzNy41MTcyLCBsbmc6IDEyNy4wNDczIH0sXG4gICAgICAgICfshJzstIgnOiB7IGxhdDogMzcuNDgzNywgbG5nOiAxMjcuMDMyNCB9LFxuICAgICAgICAn7Iah7YyMJzogeyBsYXQ6IDM3LjUxNDUsIGxuZzogMTI3LjEwNTkgfSxcbiAgICAgICAgJ+yYgeuTse2PrCc6IHsgbGF0OiAzNy41MjYzLCBsbmc6IDEyNi44OTY4IH0sXG4gICAgICAgICfspJHqtawnOiB7IGxhdDogMzcuNTY0MCwgbG5nOiAxMjYuOTgwNSB9LFxuICAgICAgICAn7Jet7IK8JzogeyBsYXQ6IDM3LjUwMDcsIGxuZzogMTI3LjAzNjYgfSxcbiAgICAgICAgJ+yLoOyCrCc6IHsgbGF0OiAzNy41MjAzLCBsbmc6IDEyNy4wMjMwIH0sXG4gICAgICAgICfssq3ri7QnOiB7IGxhdDogMzcuNTIyMywgbG5nOiAxMjcuMDQ2MyB9XG4gICAgICB9XG5cbiAgICAgIC8vIOyjvOyGjOyXkOyEnCDsp4Dsl60g7LaU7Lac7ZWY7JesIOyijO2RnCDqsrDsoJVcbiAgICAgIGxldCBjbGluaWNDb29yZCA9IHsgbGF0OiAzNy41NjY1LCBsbmc6IDEyNi45NzgwIH0gLy8g6riw67O46rCSOiDshJzsmrjsl61cblxuICAgICAgaWYgKGRvY3Rvci5hZGRyZXNzKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2FyZWEsIGNvb3JkXSBvZiBPYmplY3QuZW50cmllcyhhZGRyZXNzQ29vcmRzKSkge1xuICAgICAgICAgIGlmIChkb2N0b3IuYWRkcmVzcy5pbmNsdWRlcyhhcmVhKSkge1xuICAgICAgICAgICAgY2xpbmljQ29vcmQgPSBjb29yZFxuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8g6rCZ7J2AIOyngOyXrSDrgrTsl5DshJwg7JW96rCE7J2YIOuenOuNpCDsmKTtlITshYsgKOuNlCDsnpDsl7DsiqTrn6zsmrQg67aE7Y+sKVxuICAgICAgY29uc3QgcmFuZG9tT2Zmc2V0ID0gKCkgPT4gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMC4wMDVcbiAgICAgIGNsaW5pY0Nvb3JkID0ge1xuICAgICAgICBsYXQ6IGNsaW5pY0Nvb3JkLmxhdCArIHJhbmRvbU9mZnNldCgpLFxuICAgICAgICBsbmc6IGNsaW5pY0Nvb3JkLmxuZyArIHJhbmRvbU9mZnNldCgpXG4gICAgICB9XG5cbiAgICAgIGxldCBkaXN0YW5jZSA9IG51bGxcbiAgICAgIC8vIOyCrOyaqeyekCDsnITsuZjqsIAg7J6I7Jy866m0IOyLpOygnCDqsbDrpqwg6rOE7IKwLCDsl4bsnLzrqbQg6riw67O4IOychOy5mCjshJzsmrjsl60p7JeQ7IScIOqzhOyCsFxuICAgICAgY29uc3QgZGVmYXVsdExhdCA9IHVzZXJMYXQgPyBwYXJzZUZsb2F0KHVzZXJMYXQpIDogMzcuNTY2NVxuICAgICAgY29uc3QgZGVmYXVsdExuZyA9IHVzZXJMbmcgPyBwYXJzZUZsb2F0KHVzZXJMbmcpIDogMTI2Ljk3ODBcblxuICAgICAgY29uc3QgUiA9IDYzNzEgLy8g7KeA6rWsIOuwmOyngOumhCAoa20pXG4gICAgICBjb25zdCBkTGF0ID0gKGNsaW5pY0Nvb3JkLmxhdCAtIGRlZmF1bHRMYXQpICogTWF0aC5QSSAvIDE4MFxuICAgICAgY29uc3QgZExvbiA9IChjbGluaWNDb29yZC5sbmcgLSBkZWZhdWx0TG5nKSAqIE1hdGguUEkgLyAxODBcbiAgICAgIGNvbnN0IGEgPVxuICAgICAgICBNYXRoLnNpbihkTGF0LzIpICogTWF0aC5zaW4oZExhdC8yKSArXG4gICAgICAgIE1hdGguY29zKGRlZmF1bHRMYXQgKiBNYXRoLlBJIC8gMTgwKSAqIE1hdGguY29zKGNsaW5pY0Nvb3JkLmxhdCAqIE1hdGguUEkgLyAxODApICpcbiAgICAgICAgTWF0aC5zaW4oZExvbi8yKSAqIE1hdGguc2luKGRMb24vMilcbiAgICAgIGNvbnN0IGMgPSAyICogTWF0aC5hdGFuMihNYXRoLnNxcnQoYSksIE1hdGguc3FydCgxLWEpKVxuICAgICAgZGlzdGFuY2UgPSBSICogYyAvLyDqsbDrpqwgKGttKVxuXG4gICAgICAvLyDsp4Dsl63rs4Qg7ZWE7YSw66eBXG4gICAgICBjb25zdCBjbGluaWNEaXN0cmljdCA9IGRvY3Rvci5hZGRyZXNzPy5pbmNsdWRlcygn6rCV64KoJykgPyAn6rCV64Ko6rWsJyA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N0b3IuYWRkcmVzcz8uaW5jbHVkZXMoJ+yEnOy0iCcpID8gJ+yEnOy0iOq1rCcgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdG9yLmFkZHJlc3M/LmluY2x1ZGVzKCfshqHtjIwnKSA/ICfshqHtjIzqtawnIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3Rvci5hZGRyZXNzPy5pbmNsdWRlcygn7JiB65Ox7Y+sJykgPyAn7JiB65Ox7Y+s6rWsJyA6ICfspJHqtawnXG5cbiAgICAgIGlmIChkaXN0cmljdCAmJiBkaXN0cmljdCAhPT0gJ2FsbCcgJiYgZGlzdHJpY3QgIT09IGNsaW5pY0Rpc3RyaWN0KSB7XG4gICAgICAgIHJldHVybiBudWxsXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBkb2N0b3IuaWQsXG4gICAgICAgIG5hbWU6IGRvY3Rvci5jbGluaWMgfHwgYCR7ZG9jdG9yLm5hbWV9IO2BtOumrOuLiWAsXG4gICAgICAgIGRvY3Rvck5hbWU6IGRvY3Rvci5uYW1lLFxuICAgICAgICBkb2N0b3JJbWFnZTogZG9jdG9yLmF2YXRhcixcbiAgICAgICAgYWRkcmVzczogZG9jdG9yLmFkZHJlc3MgfHwgYOyEnOyauOyLnCAke2NsaW5pY0Rpc3RyaWN0fSDqsIDsg4Hso7zshowgJHtpbmRleCArIDF967KI7KeAYCxcbiAgICAgICAgcGhvbmU6IGRvY3Rvci5waG9uZSB8fCBgMDItJHsxMDAwICsgaW5kZXh9LSR7MjAwMCArIGluZGV4fWAsXG4gICAgICAgIHNwZWNpYWxpemF0aW9uOiBkb2N0b3Iuc3BlY2lhbGl6YXRpb24gfHwgXCLsnbzrsJjsnZhcIixcbiAgICAgICAgZGlzdGFuY2U6IGAke2Rpc3RhbmNlLnRvRml4ZWQoMSl9a21gLFxuICAgICAgICBkaXN0cmljdDogY2xpbmljRGlzdHJpY3QsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBjbGluaWNDb29yZCxcbiAgICAgICAgaG91cnM6IHtcbiAgICAgICAgICBtb25fZnJpOiBcIjA5OjAwIC0gMTg6MDBcIixcbiAgICAgICAgICBzYXQ6IFwiMDk6MDAgLSAxMzowMFwiLFxuICAgICAgICAgIHN1bjogXCLtnLTsp4RcIlxuICAgICAgICB9LFxuICAgICAgICBjb25zdWx0YXRpb25UeXBlOiBnZXRDb25zdWx0YXRpb25GZWUoZG9jdG9yLCBkZXBhcnRtZW50KS5pc09mZmxpbmUgPyAnb2ZmbGluZScgOiAnb25saW5lJyxcbiAgICAgICAgY29uc3VsdGF0aW9uRmVlOiBnZXRDb25zdWx0YXRpb25GZWUoZG9jdG9yLCBkZXBhcnRtZW50KS5mZWVcbiAgICAgIH1cbiAgICB9KS5maWx0ZXIoQm9vbGVhbilcblxuICAgIC8vIOygleugrCDroZzsp4FcbiAgICBpZiAoc29ydEJ5ID09PSAncHJpY2UnKSB7XG4gICAgICAvLyDsp4Tro4zruYQg7Iu8IOyInOycvOuhnCDsoJXroKxcbiAgICAgIGNsaW5pY3Muc29ydCgoYSwgYikgPT4gYS5jb25zdWx0YXRpb25GZWUgLSBiLmNvbnN1bHRhdGlvbkZlZSlcbiAgICB9IGVsc2UgaWYgKHNvcnRCeSA9PT0gJ2Rpc3RhbmNlJykge1xuICAgICAgLy8g6rGw66asIOqwgOq5jOyatCDsiJzsnLzroZwg7KCV66CsXG4gICAgICBjbGluaWNzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgY29uc3QgZGlzdEEgPSBwYXJzZUZsb2F0KGEuZGlzdGFuY2UucmVwbGFjZSgna20nLCAnJykpXG4gICAgICAgIGNvbnN0IGRpc3RCID0gcGFyc2VGbG9hdChiLmRpc3RhbmNlLnJlcGxhY2UoJ2ttJywgJycpKVxuICAgICAgICByZXR1cm4gZGlzdEEgLSBkaXN0QlxuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgLy8g7J6Q64+ZIOygleugrCAo6riw7KG0IOuhnOyngSk6IOynhOujjCDtg4DsnoXsl5Ag65Sw66W4IOygleugrFxuICAgICAgY29uc3QgaXNPbmxpbmVDb25zdWx0YXRpb24gPSBjbGluaWNzLmxlbmd0aCA+IDAgJiYgY2xpbmljc1swXS5jb25zdWx0YXRpb25UeXBlID09PSAnb25saW5lJ1xuXG4gICAgICBpZiAoaXNPbmxpbmVDb25zdWx0YXRpb24pIHtcbiAgICAgICAgLy8g67mE64yA66m0IOynhOujjDog7KeE66OM67mEIOyLvCDsiJzsnLzroZwg7KCV66CsXG4gICAgICAgIGNsaW5pY3Muc29ydCgoYSwgYikgPT4gYS5jb25zdWx0YXRpb25GZWUgLSBiLmNvbnN1bHRhdGlvbkZlZSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOuMgOuptCDsp4Tro4w6IOqxsOumrCDqsIDquYzsmrQg7Iic7Jy866GcIOygleugrFxuICAgICAgICBjbGluaWNzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICBjb25zdCBkaXN0QSA9IHBhcnNlRmxvYXQoYS5kaXN0YW5jZS5yZXBsYWNlKCdrbScsICcnKSlcbiAgICAgICAgICBjb25zdCBkaXN0QiA9IHBhcnNlRmxvYXQoYi5kaXN0YW5jZS5yZXBsYWNlKCdrbScsICcnKSlcbiAgICAgICAgICByZXR1cm4gZGlzdEEgLSBkaXN0QlxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgY2xpbmljczogY2xpbmljc1xuICAgIH0pXG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdDbGluaWNzIEFQSSBlcnJvcjonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBcIu2BtOumrOuLiSDsoJXrs7Trpbwg6rCA7KC47Jik64qUIOykkSDsmKTrpZjqsIAg67Cc7IOd7ZaI7Iq164uI64ukLlwiIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiZ2V0Q29uc3VsdGF0aW9uRmVlIiwiZG9jdG9yIiwiZGVwYXJ0bWVudCIsImRlcGFydG1lbnROYW1lcyIsInRhcmdldERlcGFydG1lbnROYW1lIiwib2Jlc2l0eURlcGFydG1lbnRzIiwib2ZmbGluZURlcGFydG1lbnRzIiwiaXNPZmZsaW5lIiwiaW5jbHVkZXMiLCJjb25zdWx0YXRpb25UeXBlIiwiY2xpbmljX2ZlZXMiLCJsZW5ndGgiLCJtYXRjaGluZ0ZlZSIsImZpbmQiLCJmZWUiLCJpc0FjdGl2ZSIsImRlcGFydG1lbnRzIiwibmFtZSIsImJhc2VQcmljZSIsImZhbGxiYWNrRmVlIiwiYmFzZUZlZXMiLCJiYXNlRmVlIiwic3BlY2lhbGl6YXRpb24iLCJmaW5hbEZlZSIsIk1hdGgiLCJmbG9vciIsIkdFVCIsInJlcSIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsImdldCIsImRpc3RyaWN0IiwidXNlckxhdCIsInVzZXJMbmciLCJzb3J0QnkiLCJ3aGVyZUNsYXVzZSIsInJvbGUiLCJPUiIsImNvbnRhaW5zIiwiZGVwYXJ0bWVudE5hbWUiLCJkb2N0b3JzIiwidXNlcnMiLCJmaW5kTWFueSIsIndoZXJlIiwic2VsZWN0IiwiaWQiLCJjbGluaWMiLCJhZGRyZXNzIiwicGhvbmUiLCJhdmF0YXIiLCJpbmNsdWRlIiwiY2xpbmljcyIsIm1hcCIsImluZGV4IiwiYWRkcmVzc0Nvb3JkcyIsImxhdCIsImxuZyIsImNsaW5pY0Nvb3JkIiwiYXJlYSIsImNvb3JkIiwiT2JqZWN0IiwiZW50cmllcyIsInJhbmRvbU9mZnNldCIsInJhbmRvbSIsImRpc3RhbmNlIiwiZGVmYXVsdExhdCIsInBhcnNlRmxvYXQiLCJkZWZhdWx0TG5nIiwiUiIsImRMYXQiLCJQSSIsImRMb24iLCJhIiwic2luIiwiY29zIiwiYyIsImF0YW4yIiwic3FydCIsImNsaW5pY0Rpc3RyaWN0IiwiZG9jdG9yTmFtZSIsImRvY3RvckltYWdlIiwidG9GaXhlZCIsImNvb3JkaW5hdGVzIiwiaG91cnMiLCJtb25fZnJpIiwic2F0Iiwic3VuIiwiY29uc3VsdGF0aW9uRmVlIiwiZmlsdGVyIiwiQm9vbGVhbiIsInNvcnQiLCJiIiwiZGlzdEEiLCJyZXBsYWNlIiwiZGlzdEIiLCJpc09ubGluZUNvbnN1bHRhdGlvbiIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJjb25zb2xlIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/clinics/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();