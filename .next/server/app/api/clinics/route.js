"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/clinics/route";
exports.ids = ["app/api/clinics/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _home_nbg_Desktop_obesity1_src_app_api_clinics_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/app/api/clinics/route.ts */ \"(rsc)/./src/app/api/clinics/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/clinics/route\",\n        pathname: \"/api/clinics\",\n        filename: \"route\",\n        bundlePath: \"app/api/clinics/route\"\n    },\n    resolvedPagePath: \"/home/nbg/Desktop/obesity1/src/app/api/clinics/route.ts\",\n    nextConfigOutput,\n    userland: _home_nbg_Desktop_obesity1_src_app_api_clinics_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/clinics/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbGluaWNzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjbGluaWNzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2xpbmljcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbmJnJTJGRGVza3RvcCUyRm9iZXNpdHkxJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGbmJnJTJGRGVza3RvcCUyRm9iZXNpdHkxJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNxQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWRpY2FsLXBsYXRmb3JtLz9jODAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9ob21lL25iZy9EZXNrdG9wL29iZXNpdHkxL3NyYy9hcHAvYXBpL2NsaW5pY3Mvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NsaW5pY3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jbGluaWNzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jbGluaWNzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL2hvbWUvbmJnL0Rlc2t0b3Avb2Jlc2l0eTEvc3JjL2FwcC9hcGkvY2xpbmljcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jbGluaWNzL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/clinics/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/clinics/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\n/**\n * CORS 헤더 추가\n */ function addCorsHeaders(response, request) {\n    const origin = request?.headers.get(\"origin\") || \"http://localhost:8080\";\n    response.headers.set(\"Access-Control-Allow-Origin\", origin);\n    response.headers.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, PATCH, OPTIONS\");\n    response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n    response.headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n    return response;\n}\n/**\n * OPTIONS 요청 처리 (Preflight)\n */ async function OPTIONS(request) {\n    return addCorsHeaders(new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n        status: 200\n    }), request);\n}\n// 진료비 조회 함수\nfunction getConsultationFee(doctor, department) {\n    const departmentNames = {\n        \"obesity-treatment\": \"마운자로\",\n        \"obesity\": \"비만\",\n        \"eye-care\": \"안과\",\n        \"cold\": \"감기\",\n        \"internal-medicine\": \"내과\",\n        \"pediatrics\": \"소아과\",\n        \"dermatology\": \"피부과\",\n        \"orthopedics\": \"정형외과\",\n        \"neurosurgery\": \"신경외과\",\n        \"ent\": \"이비인후과\",\n        \"obgyn\": \"산부인과\",\n        \"urology\": \"비뇨기과\",\n        \"gastroenterology\": \"소화기내과\",\n        \"proctology\": \"항문외과\",\n        \"bowel-disorder\": \"대변\"\n    };\n    const targetDepartmentName = department ? departmentNames[department] : null;\n    // 비만 관련 과목들은 모두 대면 진료로 처리\n    const obesityDepartments = [\n        \"obesity-treatment\",\n        \"obesity\"\n    ];\n    const offlineDepartments = [\n        \"obesity-treatment\",\n        \"obesity\",\n        \"orthopedics\",\n        \"neurosurgery\",\n        \"dermatology\"\n    ];\n    const isOffline = department ? offlineDepartments.includes(department) : false;\n    const consultationType = isOffline ? \"OFFLINE\" : \"ONLINE\";\n    // 해당 의사의 진료비 찾기\n    if (doctor.clinic_fees && doctor.clinic_fees.length > 0) {\n        let matchingFee;\n        // 비만 관련 과목일 때는 유연한 매칭\n        if (department && obesityDepartments.includes(department)) {\n            matchingFee = doctor.clinic_fees.find((fee)=>fee.consultationType === consultationType && fee.isActive && (fee.departments.name.includes(\"비만\") || fee.departments.name.includes(\"마운자로\") || fee.departments.name.includes(\"체중\") || fee.departments.name.includes(\"다이어트\")));\n        } else {\n            // 다른 과목들은 정확한 매칭\n            matchingFee = doctor.clinic_fees.find((fee)=>(!targetDepartmentName || fee.departments.name.includes(targetDepartmentName)) && fee.consultationType === consultationType && fee.isActive);\n        }\n        if (matchingFee) {\n            return {\n                fee: matchingFee.basePrice,\n                isOffline\n            };\n        }\n        // 정확한 매칭이 없으면 같은 consultationType의 첫 번째 활성 진료비 사용\n        const fallbackFee = doctor.clinic_fees.find((fee)=>fee.consultationType === consultationType && fee.isActive);\n        if (fallbackFee) {\n            return {\n                fee: fallbackFee.basePrice,\n                isOffline\n            };\n        }\n    }\n    // 기본 진료비 (DB에 데이터가 없는 경우)\n    const baseFees = {\n        \"소화기내과\": 25000,\n        \"항문외과\": 30000,\n        \"내과\": 20000,\n        \"외과\": 35000,\n        \"비만치료 전문의\": 40000,\n        \"내분비내과 전문의\": 35000,\n        \"피부과 전문의\": 30000,\n        \"정형외과 전문의\": 35000,\n        \"이비인후과 전문의\": 25000,\n        \"마운자로\": 80000\n    };\n    const baseFee = baseFees[doctor.specialization || \"\"] || 20000;\n    const finalFee = isOffline ? Math.floor(baseFee * 1.2) : baseFee;\n    return {\n        fee: finalFee,\n        isOffline\n    };\n}\nasync function GET(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const department = searchParams.get(\"department\");\n        const district = searchParams.get(\"district\");\n        const userLat = searchParams.get(\"lat\");\n        const userLng = searchParams.get(\"lng\");\n        const sortBy = searchParams.get(\"sortBy\") || \"auto\" // auto, distance, price\n        ;\n        // 의사 정보와 함께 클리닉 정보 조회\n        let whereClause = {\n            role: \"DOCTOR\"\n        };\n        // 진료과목별 필터링\n        if (department && department !== \"all\") {\n            const departmentNames = {\n                \"obesity-treatment\": \"마운자로\",\n                \"obesity\": \"비만\",\n                \"eye-care\": \"안과\",\n                \"cold\": \"감기\",\n                \"internal-medicine\": \"내과\",\n                \"pediatrics\": \"소아과\",\n                \"dermatology\": \"피부과\",\n                \"orthopedics\": \"정형외과\",\n                \"neurosurgery\": \"신경외과\",\n                \"ent\": \"이비인후과\",\n                \"obgyn\": \"산부인과\",\n                \"urology\": \"비뇨기과\",\n                \"gastroenterology\": \"소화기내과\",\n                \"proctology\": \"항문외과\",\n                \"bowel-disorder\": \"대변\"\n            };\n            // 비만 관련 과목들은 모두 함께 보여주기\n            const obesityDepartments = [\n                \"obesity-treatment\",\n                \"obesity\"\n            ];\n            if (obesityDepartments.includes(department)) {\n                // 비만 관련 과목 선택 시 '비만' 또는 '마운자로' 포함된 의원들 모두 표시\n                whereClause.OR = [\n                    {\n                        specialization: {\n                            contains: \"비만\"\n                        }\n                    },\n                    {\n                        specialization: {\n                            contains: \"마운자로\"\n                        }\n                    },\n                    {\n                        specialization: {\n                            contains: \"체중\"\n                        }\n                    },\n                    {\n                        specialization: {\n                            contains: \"다이어트\"\n                        }\n                    }\n                ];\n            } else {\n                const departmentName = departmentNames[department];\n                if (departmentName) {\n                    whereClause.specialization = {\n                        contains: departmentName\n                    };\n                }\n            }\n        }\n        const doctors = await prisma.users.findMany({\n            where: whereClause,\n            select: {\n                id: true,\n                name: true,\n                specialization: true,\n                clinic: true,\n                address: true,\n                phone: true,\n                avatar: true,\n                clinic_fees: {\n                    include: {\n                        departments: true\n                    }\n                }\n            }\n        });\n        // 의사 정보를 클리닉 형태로 변환\n        const clinics = doctors.map((doctor, index)=>{\n            // 주소 기반 좌표 매핑 (더 정확한 위치)\n            const addressCoords = {\n                \"강남\": {\n                    lat: 37.5172,\n                    lng: 127.0473\n                },\n                \"서초\": {\n                    lat: 37.4837,\n                    lng: 127.0324\n                },\n                \"송파\": {\n                    lat: 37.5145,\n                    lng: 127.1059\n                },\n                \"영등포\": {\n                    lat: 37.5263,\n                    lng: 126.8968\n                },\n                \"중구\": {\n                    lat: 37.5640,\n                    lng: 126.9805\n                },\n                \"역삼\": {\n                    lat: 37.5007,\n                    lng: 127.0366\n                },\n                \"신사\": {\n                    lat: 37.5203,\n                    lng: 127.0230\n                },\n                \"청담\": {\n                    lat: 37.5223,\n                    lng: 127.0463\n                }\n            };\n            // 주소에서 지역 추출하여 좌표 결정\n            let clinicCoord = {\n                lat: 37.5665,\n                lng: 126.9780\n            } // 기본값: 서울역\n            ;\n            if (doctor.address) {\n                for (const [area, coord] of Object.entries(addressCoords)){\n                    if (doctor.address.includes(area)) {\n                        clinicCoord = coord;\n                        break;\n                    }\n                }\n            }\n            // 같은 지역 내에서 약간의 랜덤 오프셋 (더 자연스러운 분포)\n            const randomOffset = ()=>(Math.random() - 0.5) * 0.005;\n            clinicCoord = {\n                lat: clinicCoord.lat + randomOffset(),\n                lng: clinicCoord.lng + randomOffset()\n            };\n            let distance = null;\n            // 사용자 위치가 있으면 실제 거리 계산, 없으면 기본 위치(서울역)에서 계산\n            const defaultLat = userLat ? parseFloat(userLat) : 37.5665;\n            const defaultLng = userLng ? parseFloat(userLng) : 126.9780;\n            const R = 6371 // 지구 반지름 (km)\n            ;\n            const dLat = (clinicCoord.lat - defaultLat) * Math.PI / 180;\n            const dLon = (clinicCoord.lng - defaultLng) * Math.PI / 180;\n            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(defaultLat * Math.PI / 180) * Math.cos(clinicCoord.lat * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            distance = R * c // 거리 (km)\n            ;\n            // 지역별 필터링\n            const clinicDistrict = doctor.address?.includes(\"강남\") ? \"강남구\" : doctor.address?.includes(\"서초\") ? \"서초구\" : doctor.address?.includes(\"송파\") ? \"송파구\" : doctor.address?.includes(\"영등포\") ? \"영등포구\" : \"중구\";\n            if (district && district !== \"all\" && district !== clinicDistrict) {\n                return null;\n            }\n            return {\n                id: doctor.id,\n                name: doctor.clinic || `${doctor.name} 클리닉`,\n                doctorName: doctor.name,\n                doctorImage: doctor.avatar,\n                address: doctor.address || \"주소 정보 없음\",\n                phone: doctor.phone || \"전화번호 정보 없음\",\n                specialization: doctor.specialization || \"일반의\",\n                distance: `${distance.toFixed(1)}km`,\n                district: clinicDistrict,\n                coordinates: clinicCoord,\n                hours: {\n                    mon_fri: \"09:00 - 18:00\",\n                    sat: \"09:00 - 13:00\",\n                    sun: \"휴진\"\n                },\n                consultationType: getConsultationFee(doctor, department).isOffline ? \"offline\" : \"online\",\n                consultationFee: getConsultationFee(doctor, department).fee\n            };\n        }).filter(Boolean);\n        // 정렬 로직\n        if (sortBy === \"price\") {\n            // 진료비 싼 순으로 정렬\n            clinics.sort((a, b)=>a.consultationFee - b.consultationFee);\n        } else if (sortBy === \"distance\") {\n            // 거리 가까운 순으로 정렬\n            clinics.sort((a, b)=>{\n                const distA = parseFloat(a.distance.replace(\"km\", \"\"));\n                const distB = parseFloat(b.distance.replace(\"km\", \"\"));\n                return distA - distB;\n            });\n        } else {\n            // 자동 정렬 (기존 로직): 진료 타입에 따른 정렬\n            const isOnlineConsultation = clinics.length > 0 && clinics[0].consultationType === \"online\";\n            if (isOnlineConsultation) {\n                // 비대면 진료: 진료비 싼 순으로 정렬\n                clinics.sort((a, b)=>a.consultationFee - b.consultationFee);\n            } else {\n                // 대면 진료: 거리 가까운 순으로 정렬\n                clinics.sort((a, b)=>{\n                    const distA = parseFloat(a.distance.replace(\"km\", \"\"));\n                    const distB = parseFloat(b.distance.replace(\"km\", \"\"));\n                    return distA - distB;\n                });\n            }\n        }\n        return addCorsHeaders(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            clinics: clinics\n        }), req);\n    } catch (error) {\n        console.error(\"Clinics API error:\", error);\n        return addCorsHeaders(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"클리닉 정보를 가져오는 중 오류가 발생했습니다.\"\n        }, {\n            status: 500\n        }), req);\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/clinics/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclinics%2Froute&page=%2Fapi%2Fclinics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclinics%2Froute.ts&appDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fnbg%2FDesktop%2Fobesity1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();